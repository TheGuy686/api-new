module.exports = {
	requestBody: {
		servicePresetId: {
			key: 'servicePresetId',
			type: 'string',
			example: 'authorization',
			required: true,
		},
		key: {
			key: 'key',
			type: 'string',
			example: 'authorization',
			required: true,
		},
		title: {
			key: 'title',
			type: 'string',
			example: 'Authorization',
			required: true,
		},
		serviceType: {
			key: 'serviceType',
			type: 'string',
			example: 'authenticator',
			required: true,
		},
		description: {
			key: 'description',
			type: 'string',
			example:
				'The authorization presets offers various ways of controlling access to your website and giving you access to various ways of allowing your users to sign up and use your website services.',
			required: true,
		},
		dependencies: {
			key: 'dependencies',
			type: 'json',
			example:
				'{\n                "responses": {\n                    "200-ok": {\n                        "responseId": "200-ok",\n                        "key": "200-ok",\n                        "name": "Success Response",\n                        "description": "This is the success response for any successful operation unless any other code between 199 to 299 is configured",\n                        "isArrayResponse": false,\n                        "code": 200\n                    },\n                    "401-unauthorized": {\n                        "responseId": "401-unauthorized",\n                        "key": "401-unauthorized",\n                        "name": "Unauthorized",\n                        "description": "This will get returned when ever an action is accessed that that the user does not have the access to execute",\n                        "isArrayResponse": false,\n                        "code": 401\n                    },\n                    "500-internal-error": {\n                        "responseId": "500-internal-error",\n                        "key": "500-internal-error",\n                        "name": "Second Response",\n                        "description": "This is an error that will get returned if there is any internal code or unhanled process errors",\n                        "isArrayResponse": false,\n                        "code": 500\n                    }\n                },\n                "roles": {\n                    "role-account-owner": {\n                        "roleId": "role-account-owner",\n                        "key": "role-account-owner",\n                        "role": "ROLE_ACCOUNT_OWNER"\n                    }\n                },\n                "datasources": {\n                    "eezze-amazon-mysql-1": {\n                        "dataSourceId": "eezze-amazon-mysql-1",\n                        "key": "eezze-amazon-mysql-1",\n                        "type": "database-mysql-aws",\n                        "name": "Eezze Amazon Mysql",\n                        "description": "This is a basic example of how you would use a mysql db to connect",\n                        "keyValueItems": [\n                            {\n                                "keyValueItems": [],\n                                "key": "someKey",\n                                "type": "string",\n                                "value": "alksdj"\n                            }\n                        ]\n                    },\n                    "eezze-amazon-mysql-2": {\n                        "dataSourceId": "eezze-amazon-mysql-2",\n                        "key": "eezze-amazon-mysql-2",\n                        "type": "database-mysql-aws",\n                        "name": "Eezze Amazon Mysql",\n                        "description": "This is a basic example of how you would use a mysql db to connect",\n                        "keyValueItems": [\n                            {\n                                "keyValueItems": [],\n                                "key": "someKey",\n                                "type": "string",\n                                "value": "alksdj"\n                            }\n                        ]\n                    }\n                },\n                "url-parameters": {\n                    "url-parameter-user-id": {\n                        "key": "url-parameter-user-id",\n                        "name": "User Id",\n                        "description": "This is an example of how to create a user parameter",\n                        "example": "1123",\n                        "type": "string",\n                        "inLocation": "query",\n                        "parameterId": "url-parameter-user-i"\n                    },\n                    "url-parameter-email-verify-token": {\n                        "key": "url-parameter-email-verify-token",\n                        "name": "Email Verify Token",\n                        "description": "This param is what will be supplied from the verify email sent out. Once a valid token has been processed this will then update the user to is verified",\n                        "example": "lkajsdfoieurlkajsdflkasdfu987aflkjselrkjaslkdjfljkj",\n                        "type": "string",\n                        "inLocation": "query",\n                        "parameterId": "url-parameter-email-verify-token"\n                    }\n                },\n                "request-bodies": {\n                    "request-body-login": {\n                        "requestBodyId": "request-body-login",\n                        "key": "request-body-login",\n                        "name": "Login",\n                        "description": "This is how to do a login",\n                        "contentType": "application/json",\n                        "required": true,\n                        "keyValueItems": [\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "username",\n                                "type": "string",\n                                "value": "TheGuy"\n                            },\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "password",\n                                "type": "string",\n                                "value": "Password123!76"\n                            }\n                        ]\n                    },\n                    "request-body-register": {\n                        "requestBodyId": "request-body-register",\n                        "key": "request-body-register",\n                        "name": "Register",\n                        "description": "This is an example of how to register with express",\n                        "contentType": "application/json",\n                        "required": true,\n                        "keyValueItems": [\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "username",\n                                "type": "string",\n                                "value": "TheGuy"\n                            },\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "email",\n                                "type": "string",\n                                "value": "example@email.com"\n                            },\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "password",\n                                "type": "string",\n                                "value": "Password123!&^"\n                            }\n                        ]\n                    },\n                    "request-body-forgot-password": {\n                        "contentType": "application/json",\n                        "required": false,\n                        "keyValueItems": [\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "email",\n                                "type": "string",\n                                "value": "example@email.com"\n                            }\n                        ],\n                        "key": "request-body-forgot-password",\n                        "name": "Reset Password",\n                        "description": "This request will supply the various params that is required to initialize the forgot password process",\n                        "requestBodyId": "request-body-forgot-password"\n                    },\n                    "request-body-reset-password": {\n                        "contentType": "application/json",\n                        "required": true,\n                        "keyValueItems": [\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "oldPassword",\n                                "type": "string",\n                                "value": "Password123!&"\n                            },\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "newPassword",\n                                "type": "string",\n                                "value": "Password123!&2"\n                            }\n                        ],\n                        "key": "request-body-reset-password",\n                        "name": "Reset Password",\n                        "description": "This is the params that will be set as the new password for an auth user account",\n                        "requestBodyId": "request-body-reset-password"\n                    },\n                    "request-body-refresh-token": {\n                        "requestBodyId": "request-body-refresh-token",\n                        "key": "request-body-refresh-token",\n                        "name": "Refresh Token",\n                        "description": "This is an example of how to do a refresh token refresh with express",\n                        "contentType": "application/json",\n                        "required": true,\n                        "keyValueItems": [\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "refreshToken",\n                                "type": "string",\n                                "value": "lajkfjlaksjdflkasjdflkajsdlfkjasldhflkajsdfklasdkfljsa"\n                            }\n                        ]\n                    }\n                },\n                "actions": {\n                    "action-get-user": {\n                        "actionId": "action-get-user",\n                        "key": "action-get-user",\n                        "name": "Action Get User",\n                        "description": "This is an example of how to get a user with express",\n                        "sourceAction": "get-auth-user",\n                        "entity": "user",\n                        "metadata": {"on": {}}\n                    },\n                    "action-refresh-login-token": {\n                        "actionId": "action-refresh-login-token",\n                        "key": "action-refresh-login-token",\n                        "name": "Action Refresh Login Token",\n                        "description": "This is an example of how to refresh a login token",\n                        "sourceAction": "get-auth-user",\n                        "entity": "refresh-token",\n                        "metadata": {\n                            "on": {\n                                "refreshToken": true\n                            }\n                        }\n                    },\n                    "action-eezze-login": {\n                        "actionId": "action-eezze-login",\n                        "key": "action-eezze-login",\n                        "name": "Eezze Express Login",\n                        "description": "This is how to do a JWT login with express",\n                        "sourceAction": "authenticate",\n                        "entity": "user",\n                        "metadata": {\n                            "on": {\n                                "email": true,\n                                "username": false,\n                                "password": true\n                            }\n                        }\n                    },\n                    "action-register": {\n                        "actionId": "action-register",\n                        "key": "action-register",\n                        "name": "Action Register",\n                        "description": "This is an example of how to register with express",\n                        "sourceAction": "register",\n                        "entity": "user",\n                        "metadata": {\n                            "on": {\n                                "email": true,\n                                "username": true,\n                                "password": true\n                            }\n                        }\n                    },\n                    "action-delete-auth-user": {\n                        "key": "action-delete-auth-user",\n                        "name": "Action Delete Auth User",\n                        "description": "This is an example of how to delete a user",\n                        "sourceAction": "get-auth-user",\n                        "entity": "user",\n                        "actionId": "action-delete-auth-user"\n                    },\n                    "action-verify-email": {\n                        "actionId": "action-verify-email",\n                        "metadata": {\n                            "on": {\n                                "emailVerified": true\n                            }\n                        },\n                        "key": "action-verify-email",\n                        "name": "Action Verify Email",\n                        "description": "This action will verify the email for a user of the given token",\n                        "sourceAction": "get-verify-auth-user-email",\n                        "entity": "user"\n                    },\n                    "action-reset-password": {\n                        "actionId": "action-reset-password",\n                        "key": "action-reset-password",\n                        "name": "Action Reset Password",\n                        "description": "This action will initialize the reset password process",\n                        "sourceAction": "put-reset password",\n                        "entity": "user",\n                        "metadata": {\n                            "on": {\n                                "username": true\n                            }\n                        }\n                    },\n                    "action-forgot-password": {\n                        "actionId": "action-forgot-password",\n                        "key": "action-forgot-password",\n                        "name": "Forgot Password",\n                        "description": "This is the action that will send the email to a user account that will initialize the forgot password process",\n                        "sourceAction": "put-forgot-password",\n                        "entity": "user",\n                        "metadata": {\n                            "on": {\n                                "email": true\n                            }\n                        }\n                    }\n                },\n                "erd-entities": {\n                    "eezze-amazon-mysql-1": {\n                        "entities": {\n                            "Refresh Token": {\n                                "name": "Refresh Token",\n                                "parent": null,\n                                "attr": [\n                                    {\n                                        "name": "refreshToken",\n                                        "primary": false,\n                                        "unique": false,\n                                        "nullable": false\n                                    }\n                                ],\n                                "transform": {\n                                    "x": 570,\n                                    "y": 369,\n                                    "width": 106,\n                                    "height": 52\n                                }\n                            },\n                            "User": {\n                                "name": "User",\n                                "parent": null,\n                                "attr": [\n                                    {\n                                        "name": "userId",\n                                        "primary": true,\n                                        "unique": false,\n                                        "nullable": false\n                                    },\n                                    {\n                                        "name": "email",\n                                        "primary": false,\n                                        "unique": true,\n                                        "nullable": false\n                                    },\n                                    {\n                                        "name": "username",\n                                        "primary": false,\n                                        "unique": true,\n                                        "nullable": false\n                                    },\n                                    {\n                                        "name": "emailVerified",\n                                        "primary": false,\n                                        "unique": false,\n                                        "nullable": false\n                                    },\n                                    {\n                                        "name": "password",\n                                        "primary": false,\n                                        "unique": false,\n                                        "nullable": false\n                                    },\n                                    {\n                                        "name": "passwordHash",\n                                        "primary": false,\n                                        "unique": false,\n                                        "nullable": false\n                                    }\n                                ],\n                                "transform": {\n                                    "x": 571,\n                                    "y": 209,\n                                    "width": 120,\n                                    "height": 135\n                                }\n                            }\n                        },\n                        "relations": {\n                            "Refresh Token-User": [\n                                {\n                                    "entity": "User",\n                                    "identifying": false,\n                                    "optional": true,\n                                    "cardinality": 1,\n                                    "xor": null,\n                                    "name": null,\n                                    "transform": {\n                                        "anchor": {\n                                            "x": 931,\n                                            "y": 422,\n                                            "edge": 1\n                                        },\n                                        "points": [\n                                            {\n                                                "x": 1001,\n                                                "y": 340.5\n                                            }\n                                        ],\n                                        "manual": false\n                                    }\n                                },\n                                {\n                                    "entity": "Contant Info",\n                                    "identifying": true,\n                                    "optional": false,\n                                    "cardinality": 0,\n                                    "xor": null,\n                                    "name": null,\n                                    "transform": {\n                                        "anchor": {\n                                            "x": 1060,\n                                            "y": 248,\n                                            "edge": 2\n                                        },\n                                        "points": [\n                                            {\n                                                "x": 1001,\n                                                "y": 340.5\n                                            }\n                                        ],\n                                        "manual": false\n                                    }\n                                }\n                            ]\n                        },\n                        "notes": {}\n                    },\n                    "eezze-amazon-mysql-2": {\n                        "entities": {\n                            "Login Session": {\n                                "name": "Login Session",\n                                "parent": null,\n                                "attr": [\n                                    {\n                                        "name": "sessionToken",\n                                        "primary": false,\n                                        "unique": false,\n                                        "nullable": false\n                                    }\n                                ],\n                                "transform": {\n                                    "x": 570,\n                                    "y": 369,\n                                    "width": 106,\n                                    "height": 52\n                                }\n                            }\n                        },\n                        "relations": {},\n                        "notes": {}\n                    }\n                },\n                "entities": {\n                    "user": {\n                        "entityItems": [\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-primary-key": true,\n                                        "boolean-unique": false,\n                                        "boolean-nullable": false,\n                                        "boolean-auto-increment": true\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "number",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "userId",\n                                "example": "userId example",\n                                "type": "number"\n                            },\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-primary-key": false,\n                                        "boolean-unique": true,\n                                        "boolean-nullable": false\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "string",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "email",\n                                "example": "email example",\n                                "type": "email"\n                            },\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-primary-key": false,\n                                        "boolean-unique": true,\n                                        "boolean-nullable": false\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "string",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "username",\n                                "example": "username example",\n                                "type": "text"\n                            },\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-key": true,\n                                        "boolean-sortable": true,\n                                        "input-default": "false"\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "string",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "emailVerified",\n                                "example": "emailVerified example",\n                                "type": "boolean"\n                            },\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-primary-key": false,\n                                        "boolean-unique": false,\n                                        "boolean-nullable": false,\n                                        "input-min-length": "12"\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "string",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "password",\n                                "example": "password example",\n                                "type": "text"\n                            },\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-primary-key": false,\n                                        "boolean-unique": false,\n                                        "boolean-nullable": false\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "string",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "passwordHash",\n                                "example": "passwordHash example",\n                                "type": "text"\n                            }\n                        ],\n                        "datasource": "eezze-amazon-mysql-1",\n                        "key": "user",\n                        "entityId": "user",\n                        "name": "User"\n                    },\n                    "refresh-token": {\n                        "entityId": "refresh-token",\n                        "key": "refresh-token",\n                        "name": "Refresh Token",\n                        "datasource": "eezze-amazon-mysql-1",\n                        "entityItems": [\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-primary-key": false,\n                                        "boolean-unique": false,\n                                        "boolean-nullable": false\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "string",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "refreshToken",\n                                "example": "refreshToken example",\n                                "type": "text"\n                            }\n                        ]\n                    }\n                }\n            }',
			required: true,
		},
		categories: {
			key: 'categories',
			type: 'json',
			example:
				'[\n                {\n                    "key": "login",\n                    "title": "Login",\n                    "description": "",\n                    "presets": [\n                        {\n                            "key": "jwt-token-login",\n                            "title": "JWT Token Login",\n                            "paths": {\n                                "get": {},\n                                "post": {\n                                    "eezze-authenticator-login": {\n                                        "pathId": "eezze-authenticator-login",\n                                        "key": "eezze-authenticator-login",\n                                        "name": "Login",\n                                        "description": "This is a login example",\n                                        "method": "post",\n                                        "path": "/login",\n                                        "handler": "postLogin",\n                                        "security": "",\n                                        "requestBody": "request-body-login",\n                                        "action": "action-eezze-login",\n                                        "actionChain": "",\n                                        "urlParams": [],\n                                        "roles": {\n                                            "create": [],\n                                            "read": [],\n                                            "update": [],\n                                            "delete": []\n                                        },\n                                        "actionsMetadata": {\n                                            "on": {\n                                                "urlParamsDataBindings": {},\n                                                "requestBodyPropDataBindings": {\n                                                    "email": "email",\n                                                    "password": "password"\n                                                }\n                                            },\n                                            "outputResponseBindings": {\n                                                "success": "200-ok",\n                                                "codeError": "500-internal-error",\n                                                "processError": "401-unauthorized"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "color": "#b87e50"\n                        },\n                        {\n                            "key": "express-jwt-refresh",\n                            "title": "Express JWT Refresh",\n                            "paths": {\n                                "get": {},\n                                "post": {},\n                                "put": {\n                                    "eezze-auth-refresh-token": {\n                                        "pathId": "eezze-auth-refresh-token",\n                                        "key": "eezze-auth-refresh-token",\n                                        "name": "Refresh Token",\n                                        "description": "This is an example of how to refresh a login token with express",\n                                        "method": "put",\n                                        "path": "/auth/token",\n                                        "handler": "putRefreshToken",\n                                        "requestBody": "request-body-refresh-token",\n                                        "action": "action-refresh-login-token",\n                                        "actionChain": "",\n                                        "urlParams": [],\n                                        "roles": {\n                                            "create": [],\n                                            "read": [],\n                                            "update": [],\n                                            "delete": []\n                                        },\n                                        "actionsMetadata": {\n                                            "on": {\n                                                "urlParamsDataBindings": {},\n                                                "requestBodyPropDataBindings": {\n                                                    "refreshToken": "refreshToken"\n                                                }\n                                            },\n                                            "outputResponseBindings": {\n                                                "success": "200-ok",\n                                                "codeError": "500-internal-error",\n                                                "processError": "500-internal-error"\n                                            }\n                                        }\n                                    }\n                                },\n                                "delete": {}\n                            },\n                            "color": "#3c8005"\n                        }\n                    ]\n                }]',
			required: true,
		},
	},
	flattened: {
		servicePresetId: 'authorization',
		key: 'authorization',
		title: 'Authorization',
		serviceType: 'authenticator',
		description:
			'The authorization presets offers various ways of controlling access to your website and giving you access to various ways of allowing your users to sign up and use your website services.',
		dependencies:
			'{\n                "responses": {\n                    "200-ok": {\n                        "responseId": "200-ok",\n                        "key": "200-ok",\n                        "name": "Success Response",\n                        "description": "This is the success response for any successful operation unless any other code between 199 to 299 is configured",\n                        "isArrayResponse": false,\n                        "code": 200\n                    },\n                    "401-unauthorized": {\n                        "responseId": "401-unauthorized",\n                        "key": "401-unauthorized",\n                        "name": "Unauthorized",\n                        "description": "This will get returned when ever an action is accessed that that the user does not have the access to execute",\n                        "isArrayResponse": false,\n                        "code": 401\n                    },\n                    "500-internal-error": {\n                        "responseId": "500-internal-error",\n                        "key": "500-internal-error",\n                        "name": "Second Response",\n                        "description": "This is an error that will get returned if there is any internal code or unhanled process errors",\n                        "isArrayResponse": false,\n                        "code": 500\n                    }\n                },\n                "roles": {\n                    "role-account-owner": {\n                        "roleId": "role-account-owner",\n                        "key": "role-account-owner",\n                        "role": "ROLE_ACCOUNT_OWNER"\n                    }\n                },\n                "datasources": {\n                    "eezze-amazon-mysql-1": {\n                        "dataSourceId": "eezze-amazon-mysql-1",\n                        "key": "eezze-amazon-mysql-1",\n                        "type": "database-mysql-aws",\n                        "name": "Eezze Amazon Mysql",\n                        "description": "This is a basic example of how you would use a mysql db to connect",\n                        "keyValueItems": [\n                            {\n                                "keyValueItems": [],\n                                "key": "someKey",\n                                "type": "string",\n                                "value": "alksdj"\n                            }\n                        ]\n                    },\n                    "eezze-amazon-mysql-2": {\n                        "dataSourceId": "eezze-amazon-mysql-2",\n                        "key": "eezze-amazon-mysql-2",\n                        "type": "database-mysql-aws",\n                        "name": "Eezze Amazon Mysql",\n                        "description": "This is a basic example of how you would use a mysql db to connect",\n                        "keyValueItems": [\n                            {\n                                "keyValueItems": [],\n                                "key": "someKey",\n                                "type": "string",\n                                "value": "alksdj"\n                            }\n                        ]\n                    }\n                },\n                "url-parameters": {\n                    "url-parameter-user-id": {\n                        "key": "url-parameter-user-id",\n                        "name": "User Id",\n                        "description": "This is an example of how to create a user parameter",\n                        "example": "1123",\n                        "type": "string",\n                        "inLocation": "query",\n                        "parameterId": "url-parameter-user-i"\n                    },\n                    "url-parameter-email-verify-token": {\n                        "key": "url-parameter-email-verify-token",\n                        "name": "Email Verify Token",\n                        "description": "This param is what will be supplied from the verify email sent out. Once a valid token has been processed this will then update the user to is verified",\n                        "example": "lkajsdfoieurlkajsdflkasdfu987aflkjselrkjaslkdjfljkj",\n                        "type": "string",\n                        "inLocation": "query",\n                        "parameterId": "url-parameter-email-verify-token"\n                    }\n                },\n                "request-bodies": {\n                    "request-body-login": {\n                        "requestBodyId": "request-body-login",\n                        "key": "request-body-login",\n                        "name": "Login",\n                        "description": "This is how to do a login",\n                        "contentType": "application/json",\n                        "required": true,\n                        "keyValueItems": [\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "username",\n                                "type": "string",\n                                "value": "TheGuy"\n                            },\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "password",\n                                "type": "string",\n                                "value": "Password123!76"\n                            }\n                        ]\n                    },\n                    "request-body-register": {\n                        "requestBodyId": "request-body-register",\n                        "key": "request-body-register",\n                        "name": "Register",\n                        "description": "This is an example of how to register with express",\n                        "contentType": "application/json",\n                        "required": true,\n                        "keyValueItems": [\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "username",\n                                "type": "string",\n                                "value": "TheGuy"\n                            },\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "email",\n                                "type": "string",\n                                "value": "example@email.com"\n                            },\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "password",\n                                "type": "string",\n                                "value": "Password123!&^"\n                            }\n                        ]\n                    },\n                    "request-body-forgot-password": {\n                        "contentType": "application/json",\n                        "required": false,\n                        "keyValueItems": [\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "email",\n                                "type": "string",\n                                "value": "example@email.com"\n                            }\n                        ],\n                        "key": "request-body-forgot-password",\n                        "name": "Reset Password",\n                        "description": "This request will supply the various params that is required to initialize the forgot password process",\n                        "requestBodyId": "request-body-forgot-password"\n                    },\n                    "request-body-reset-password": {\n                        "contentType": "application/json",\n                        "required": true,\n                        "keyValueItems": [\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "oldPassword",\n                                "type": "string",\n                                "value": "Password123!&"\n                            },\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "newPassword",\n                                "type": "string",\n                                "value": "Password123!&2"\n                            }\n                        ],\n                        "key": "request-body-reset-password",\n                        "name": "Reset Password",\n                        "description": "This is the params that will be set as the new password for an auth user account",\n                        "requestBodyId": "request-body-reset-password"\n                    },\n                    "request-body-refresh-token": {\n                        "requestBodyId": "request-body-refresh-token",\n                        "key": "request-body-refresh-token",\n                        "name": "Refresh Token",\n                        "description": "This is an example of how to do a refresh token refresh with express",\n                        "contentType": "application/json",\n                        "required": true,\n                        "keyValueItems": [\n                            {\n                                "required": true,\n                                "keyValueItems": [],\n                                "key": "refreshToken",\n                                "type": "string",\n                                "value": "lajkfjlaksjdflkasjdflkajsdlfkjasldhflkajsdfklasdkfljsa"\n                            }\n                        ]\n                    }\n                },\n                "actions": {\n                    "action-get-user": {\n                        "actionId": "action-get-user",\n                        "key": "action-get-user",\n                        "name": "Action Get User",\n                        "description": "This is an example of how to get a user with express",\n                        "sourceAction": "get-auth-user",\n                        "entity": "user",\n                        "metadata": {"on": {}}\n                    },\n                    "action-refresh-login-token": {\n                        "actionId": "action-refresh-login-token",\n                        "key": "action-refresh-login-token",\n                        "name": "Action Refresh Login Token",\n                        "description": "This is an example of how to refresh a login token",\n                        "sourceAction": "get-auth-user",\n                        "entity": "refresh-token",\n                        "metadata": {\n                            "on": {\n                                "refreshToken": true\n                            }\n                        }\n                    },\n                    "action-eezze-login": {\n                        "actionId": "action-eezze-login",\n                        "key": "action-eezze-login",\n                        "name": "Eezze Express Login",\n                        "description": "This is how to do a JWT login with express",\n                        "sourceAction": "authenticate",\n                        "entity": "user",\n                        "metadata": {\n                            "on": {\n                                "email": true,\n                                "username": false,\n                                "password": true\n                            }\n                        }\n                    },\n                    "action-register": {\n                        "actionId": "action-register",\n                        "key": "action-register",\n                        "name": "Action Register",\n                        "description": "This is an example of how to register with express",\n                        "sourceAction": "register",\n                        "entity": "user",\n                        "metadata": {\n                            "on": {\n                                "email": true,\n                                "username": true,\n                                "password": true\n                            }\n                        }\n                    },\n                    "action-delete-auth-user": {\n                        "key": "action-delete-auth-user",\n                        "name": "Action Delete Auth User",\n                        "description": "This is an example of how to delete a user",\n                        "sourceAction": "get-auth-user",\n                        "entity": "user",\n                        "actionId": "action-delete-auth-user"\n                    },\n                    "action-verify-email": {\n                        "actionId": "action-verify-email",\n                        "metadata": {\n                            "on": {\n                                "emailVerified": true\n                            }\n                        },\n                        "key": "action-verify-email",\n                        "name": "Action Verify Email",\n                        "description": "This action will verify the email for a user of the given token",\n                        "sourceAction": "get-verify-auth-user-email",\n                        "entity": "user"\n                    },\n                    "action-reset-password": {\n                        "actionId": "action-reset-password",\n                        "key": "action-reset-password",\n                        "name": "Action Reset Password",\n                        "description": "This action will initialize the reset password process",\n                        "sourceAction": "put-reset password",\n                        "entity": "user",\n                        "metadata": {\n                            "on": {\n                                "username": true\n                            }\n                        }\n                    },\n                    "action-forgot-password": {\n                        "actionId": "action-forgot-password",\n                        "key": "action-forgot-password",\n                        "name": "Forgot Password",\n                        "description": "This is the action that will send the email to a user account that will initialize the forgot password process",\n                        "sourceAction": "put-forgot-password",\n                        "entity": "user",\n                        "metadata": {\n                            "on": {\n                                "email": true\n                            }\n                        }\n                    }\n                },\n                "erd-entities": {\n                    "eezze-amazon-mysql-1": {\n                        "entities": {\n                            "Refresh Token": {\n                                "name": "Refresh Token",\n                                "parent": null,\n                                "attr": [\n                                    {\n                                        "name": "refreshToken",\n                                        "primary": false,\n                                        "unique": false,\n                                        "nullable": false\n                                    }\n                                ],\n                                "transform": {\n                                    "x": 570,\n                                    "y": 369,\n                                    "width": 106,\n                                    "height": 52\n                                }\n                            },\n                            "User": {\n                                "name": "User",\n                                "parent": null,\n                                "attr": [\n                                    {\n                                        "name": "userId",\n                                        "primary": true,\n                                        "unique": false,\n                                        "nullable": false\n                                    },\n                                    {\n                                        "name": "email",\n                                        "primary": false,\n                                        "unique": true,\n                                        "nullable": false\n                                    },\n                                    {\n                                        "name": "username",\n                                        "primary": false,\n                                        "unique": true,\n                                        "nullable": false\n                                    },\n                                    {\n                                        "name": "emailVerified",\n                                        "primary": false,\n                                        "unique": false,\n                                        "nullable": false\n                                    },\n                                    {\n                                        "name": "password",\n                                        "primary": false,\n                                        "unique": false,\n                                        "nullable": false\n                                    },\n                                    {\n                                        "name": "passwordHash",\n                                        "primary": false,\n                                        "unique": false,\n                                        "nullable": false\n                                    }\n                                ],\n                                "transform": {\n                                    "x": 571,\n                                    "y": 209,\n                                    "width": 120,\n                                    "height": 135\n                                }\n                            }\n                        },\n                        "relations": {\n                            "Refresh Token-User": [\n                                {\n                                    "entity": "User",\n                                    "identifying": false,\n                                    "optional": true,\n                                    "cardinality": 1,\n                                    "xor": null,\n                                    "name": null,\n                                    "transform": {\n                                        "anchor": {\n                                            "x": 931,\n                                            "y": 422,\n                                            "edge": 1\n                                        },\n                                        "points": [\n                                            {\n                                                "x": 1001,\n                                                "y": 340.5\n                                            }\n                                        ],\n                                        "manual": false\n                                    }\n                                },\n                                {\n                                    "entity": "Contant Info",\n                                    "identifying": true,\n                                    "optional": false,\n                                    "cardinality": 0,\n                                    "xor": null,\n                                    "name": null,\n                                    "transform": {\n                                        "anchor": {\n                                            "x": 1060,\n                                            "y": 248,\n                                            "edge": 2\n                                        },\n                                        "points": [\n                                            {\n                                                "x": 1001,\n                                                "y": 340.5\n                                            }\n                                        ],\n                                        "manual": false\n                                    }\n                                }\n                            ]\n                        },\n                        "notes": {}\n                    },\n                    "eezze-amazon-mysql-2": {\n                        "entities": {\n                            "Login Session": {\n                                "name": "Login Session",\n                                "parent": null,\n                                "attr": [\n                                    {\n                                        "name": "sessionToken",\n                                        "primary": false,\n                                        "unique": false,\n                                        "nullable": false\n                                    }\n                                ],\n                                "transform": {\n                                    "x": 570,\n                                    "y": 369,\n                                    "width": 106,\n                                    "height": 52\n                                }\n                            }\n                        },\n                        "relations": {},\n                        "notes": {}\n                    }\n                },\n                "entities": {\n                    "user": {\n                        "entityItems": [\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-primary-key": true,\n                                        "boolean-unique": false,\n                                        "boolean-nullable": false,\n                                        "boolean-auto-increment": true\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "number",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "userId",\n                                "example": "userId example",\n                                "type": "number"\n                            },\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-primary-key": false,\n                                        "boolean-unique": true,\n                                        "boolean-nullable": false\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "string",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "email",\n                                "example": "email example",\n                                "type": "email"\n                            },\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-primary-key": false,\n                                        "boolean-unique": true,\n                                        "boolean-nullable": false\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "string",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "username",\n                                "example": "username example",\n                                "type": "text"\n                            },\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-key": true,\n                                        "boolean-sortable": true,\n                                        "input-default": "false"\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "string",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "emailVerified",\n                                "example": "emailVerified example",\n                                "type": "boolean"\n                            },\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-primary-key": false,\n                                        "boolean-unique": false,\n                                        "boolean-nullable": false,\n                                        "input-min-length": "12"\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "string",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "password",\n                                "example": "password example",\n                                "type": "text"\n                            },\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-primary-key": false,\n                                        "boolean-unique": false,\n                                        "boolean-nullable": false\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "string",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "passwordHash",\n                                "example": "passwordHash example",\n                                "type": "text"\n                            }\n                        ],\n                        "datasource": "eezze-amazon-mysql-1",\n                        "key": "user",\n                        "entityId": "user",\n                        "name": "User"\n                    },\n                    "refresh-token": {\n                        "entityId": "refresh-token",\n                        "key": "refresh-token",\n                        "name": "Refresh Token",\n                        "datasource": "eezze-amazon-mysql-1",\n                        "entityItems": [\n                            {\n                                "dbValues": {\n                                    "keyValues": {\n                                        "boolean-primary-key": false,\n                                        "boolean-unique": false,\n                                        "boolean-nullable": false\n                                    }\n                                },\n                                "relation": "",\n                                "regex": "",\n                                "primitiveType": "string",\n                                "required": false,\n                                "isArray": false,\n                                "ignoreInModel": false,\n                                "key": "refreshToken",\n                                "example": "refreshToken example",\n                                "type": "text"\n                            }\n                        ]\n                    }\n                }\n            }',
		categories:
			'[\n                {\n                    "key": "login",\n                    "title": "Login",\n                    "description": "",\n                    "presets": [\n                        {\n                            "key": "jwt-token-login",\n                            "title": "JWT Token Login",\n                            "paths": {\n                                "get": {},\n                                "post": {\n                                    "eezze-authenticator-login": {\n                                        "pathId": "eezze-authenticator-login",\n                                        "key": "eezze-authenticator-login",\n                                        "name": "Login",\n                                        "description": "This is a login example",\n                                        "method": "post",\n                                        "path": "/login",\n                                        "handler": "postLogin",\n                                        "security": "",\n                                        "requestBody": "request-body-login",\n                                        "action": "action-eezze-login",\n                                        "actionChain": "",\n                                        "urlParams": [],\n                                        "roles": {\n                                            "create": [],\n                                            "read": [],\n                                            "update": [],\n                                            "delete": []\n                                        },\n                                        "actionsMetadata": {\n                                            "on": {\n                                                "urlParamsDataBindings": {},\n                                                "requestBodyPropDataBindings": {\n                                                    "email": "email",\n                                                    "password": "password"\n                                                }\n                                            },\n                                            "outputResponseBindings": {\n                                                "success": "200-ok",\n                                                "codeError": "500-internal-error",\n                                                "processError": "401-unauthorized"\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            "color": "#b87e50"\n                        },\n                        {\n                            "key": "express-jwt-refresh",\n                            "title": "Express JWT Refresh",\n                            "paths": {\n                                "get": {},\n                                "post": {},\n                                "put": {\n                                    "eezze-auth-refresh-token": {\n                                        "pathId": "eezze-auth-refresh-token",\n                                        "key": "eezze-auth-refresh-token",\n                                        "name": "Refresh Token",\n                                        "description": "This is an example of how to refresh a login token with express",\n                                        "method": "put",\n                                        "path": "/auth/token",\n                                        "handler": "putRefreshToken",\n                                        "requestBody": "request-body-refresh-token",\n                                        "action": "action-refresh-login-token",\n                                        "actionChain": "",\n                                        "urlParams": [],\n                                        "roles": {\n                                            "create": [],\n                                            "read": [],\n                                            "update": [],\n                                            "delete": []\n                                        },\n                                        "actionsMetadata": {\n                                            "on": {\n                                                "urlParamsDataBindings": {},\n                                                "requestBodyPropDataBindings": {\n                                                    "refreshToken": "refreshToken"\n                                                }\n                                            },\n                                            "outputResponseBindings": {\n                                                "success": "200-ok",\n                                                "codeError": "500-internal-error",\n                                                "processError": "500-internal-error"\n                                            }\n                                        }\n                                    }\n                                },\n                                "delete": {}\n                            },\n                            "color": "#3c8005"\n                        }\n                    ]\n                }]',
	},
};
